// ================== 1. 加载数据和定义区域 ==================

// 加载 FAO GAUL 2015 一级行政区划数据
var gaul = ee.FeatureCollection('FAO/GAUL/2015/level1');

// 过滤出中国的行政区划
var china_adm1 = gaul.filter(ee.Filter.eq('ADM0_NAME', 'China'));

// 定义感兴趣的省份列表
var provinces_of_interest = [
  'Hunan Sheng', 
  'Jiangxi Sheng', 
  'Guangdong Sheng', 
  'Fujian Sheng', 
  'Guangxi Zhuangzu Zizhiqu', 
  'Guizhou Sheng'
];

// 过滤出感兴趣的省份并合并为一个几何对象
var roi = china_adm1.filter(ee.Filter.inList('ADM1_NAME', provinces_of_interest))
  .geometry();

Map.centerObject(roi, 6);
Map.addLayer(roi, {color: 'blue'}, '研究区域');

// ================== 2. 加载2019年的影像 ==================

// 加载2019年的影像
var images2019 = [
  ee.Image("projects/ee-1261423515/assets/DP/Hunan_2019"),
  ee.Image("projects/ee-1261423515/assets/DP/Jiangxi_2019"),
  ee.Image("projects/ee-1261423515/assets/DP/Guangdong_2019"),
  ee.Image("projects/ee-1261423515/assets/DP/Fujian_2019"),
  ee.Image("projects/ee-1261423515/assets/DP/Guangxi_2019"),
  ee.Image("projects/ee-1261423515/assets/DP/Guizhou_2019")
];

// 合并影像为一个影像
var mergedImage2019 = ee.ImageCollection(images2019).mosaic().clip(roi);

// 检查波段名称
print('合并影像的波段名称:', mergedImage2019.bandNames());

// 检查 ROI 内各类别的像素数量
var classStats = mergedImage2019.select('b1').reduceRegion({
  reducer: ee.Reducer.frequencyHistogram(),
  geometry: roi,
  scale: 30,
  maxPixels: 1e13
}).get('b1');

print('类别像素统计:', classStats);

// 可视化大棚像素
Map.addLayer(mergedImage2019.select('b1').eq(1).selfMask(), {palette: 'red'}, 'Greenhouse Pixels');

// ================== 3. 样本采集 ==================

// 使用 stratifiedSample 进行分层抽样，指定每个类别的样本数量
var samples = mergedImage2019.stratifiedSample({
  numPoints: 0, // 必须提供 numPoints 参数，可以设置为 0
  classBand: 'b1',
  region: roi,
  scale: 30,
  seed: 100,
  geometries: true,
  classValues: [1, 0], // 类别值列表
  classPoints: [10000, 30000], // 对应的样本数量
  tileScale: 2 // 根据需要调整
}).map(function(feature) {
  var label = feature.get('b1');
  return feature.set('label', label);
});

// 分别获取大棚和非大棚样本
var greenhouseSamples = samples.filter(ee.Filter.eq('label', 1));
var nonGreenhouseSamples = samples.filter(ee.Filter.eq('label', 0));

// 打印样本数量
print('大棚样本数:', greenhouseSamples.size());
print('非大棚样本数:', nonGreenhouseSamples.size());

// 可视化样本点
Map.addLayer(greenhouseSamples, {color: 'green'}, 'Greenhouse Samples');
Map.addLayer(nonGreenhouseSamples, {color: 'blue'}, 'Non-Greenhouse Samples');

// ================== 4. 样本迁移步骤 ==================

// 定义尺度因子和云掩膜函数
// Landsat 8 的云掩膜函数
function maskL8sr(image) {
  var qa = image.select('QA_PIXEL');
  var cloudShadowBitMask = (1 << 4);
  var cloudsBitMask = (1 << 3);
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
               .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}

// Landsat 8 的尺度因子校正函数
function scaleL8sr(image) {
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  return image.addBands(opticalBands, null, true);
}

// Landsat 5 和 7 的云掩膜函数
function maskL457sr(image) {
  var qa = image.select('QA_PIXEL');
  var cloudShadowBitMask = (1 << 4);
  var cloudsBitMask = (1 << 3);
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
               .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}

// Landsat 5 和 7 的尺度因子校正函数
function scaleL457sr(image) {
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  return image.addBands(opticalBands, null, true);
}

// 加载 Landsat 数据并进行光谱距离计算
function loadLandsatImage(year, roi) {
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = ee.Date.fromYMD(year, 12, 31);

  var l5 = ee.ImageCollection('LANDSAT/LT05/C02/T1_L2')
    .filterBounds(roi)
    .filterDate(startDate, endDate)
    .map(maskL457sr)
    .map(scaleL457sr)
    .select(['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'], 
            ['blue', 'green', 'red', 'nir', 'swir1', 'swir2']);

  var l7 = ee.ImageCollection('LANDSAT/LE07/C02/T1_L2')
    .filterBounds(roi)
    .filterDate(startDate, endDate)
    .map(maskL457sr)
    .map(scaleL457sr)
    .select(['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'], 
            ['blue', 'green', 'red', 'nir', 'swir1', 'swir2']);

  var l8 = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filterBounds(roi)
    .filterDate(startDate, endDate)
    .map(maskL8sr)
    .map(scaleL8sr)
    .select(['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7'], 
            ['blue', 'green', 'red', 'nir', 'swir1', 'swir2']);

  return ee.ImageCollection(l5.merge(l7).merge(l8)).median().clip(roi);
}

// 加载源年（2019年）影像
var srcImage = loadLandsatImage(2019, roi);

// 加载目标年影像并计算光谱距离
var targetYears = [2003, 2013, 2023];

targetYears.forEach(function(targetYear) {
  var targetImage = loadLandsatImage(targetYear, roi);

  // 计算光谱距离，并处理无数据值
  var sadImg = srcImage.spectralDistance(targetImage, 'sam').cos().unmask(0).rename('sadImg');
  var edImg = srcImage.spectralDistance(targetImage, 'sed').unmask(0).rename('edImg');
  var metricImg = sadImg.addBands(edImg).clip(roi);

  // 过滤大棚样本
  var filteredGreenhouseSamples = metricImg.sampleRegions({
    collection: greenhouseSamples,
    scale: 30,
    geometries: true,
    tileScale: 2 // 根据需要调整
  }).filter(ee.Filter.gt("sadImg", 0.4)) // 调整阈值
    .filter(ee.Filter.lt("edImg", 0.5));

  // 过滤非大棚样本
  var filteredNonGreenhouseSamples = metricImg.sampleRegions({
    collection: nonGreenhouseSamples,
    scale: 30,
    geometries: true,
    tileScale: 2 // 根据需要调整
  }).filter(ee.Filter.gt("sadImg", 0.4)) // 调整阈值
    .filter(ee.Filter.lt("edImg", 0.5));

  print(targetYear + '年大棚样本数:', filteredGreenhouseSamples.size());
  print(targetYear + '年非大棚样本数:', filteredNonGreenhouseSamples.size());

  // 可视化过滤后的样本
  Map.addLayer(filteredGreenhouseSamples, {color: 'yellow'}, 'Filtered Greenhouse Samples ' + targetYear);
  Map.addLayer(filteredNonGreenhouseSamples, {color: 'cyan'}, 'Filtered Non-Greenhouse Samples ' + targetYear);

  // ================== 5. 导出结果 ==================

  // 导出大棚样本到资产
  Export.table.toAsset({
    collection: filteredGreenhouseSamples,
    description: 'GreenhouseSamples_' + targetYear,
    assetId: 'projects/ee-1261423515/assets/DP/GreenhouseSamples_' + targetYear
  });

  // 导出非大棚样本到资产
  Export.table.toAsset({
    collection: filteredNonGreenhouseSamples,
    description: 'NonGreenhouseSamples_' + targetYear,
    assetId: 'projects/ee-1261423515/assets/DP/NonGreenhouseSamples_' + targetYear
  });
});
